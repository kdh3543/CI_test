import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import axios from "axios";
import { useEffect, useState } from "react";
import { Configuration, OpenAIApi } from "openai";

export default function Home() {
  const [message, setMessage] = useState("");
  const [question, setQuestion] = useState("");
  const [answer, setAnswer] = useState<any>("");
  const [key, setKey] = useState("");

  const apiTest = async () => {
    const apiUrl =
      "http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcNrgTrade?serviceKey=W87DOAeFblCeoq76UkfcBttIcSgClKzxgmr7P9SxT4dV0s0ugyH1yPAa16ZvPLPNJ5Hpn/Fi7vEVeNZb8DvQQQ==&LAWD_CD=11110&DEAL_YMD=202302";
    const urlKey = process.env.NEXT_PUBLIC_URLKEY;

    // const url = `${apiUrl}?serviceKey=${urlKey}&LAWD_CD=11110&DEAL_YMD=202302`;
    const result = await axios({
      method: "GET",
      url: "https://gfpigaptac5nemt66d6fbbld2u0cazyr.lambda-url.ap-northeast-2.on.aws/",
    });
    console.log(result);
  };

  const chatApi = async () => {
    setQuestion(message);
    const configuration = new Configuration({
      // apiKey: key,
      apiKey: "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",
    });

    const openai = new OpenAIApi(configuration);
    const result = await openai.createCompletion({
      model: "text-davinci-002",
      prompt: message,
      temperature: 0.7,
      max_tokens: 256,
      top_p: 1,
      frequency_penalty: 0,
      presence_penalty: 0,
    });

    console.log(result.data);
    setAnswer(result?.data?.choices[0]?.text);
  };

  const onChatMessage = (e: any) => {
    console.log(e.target.value);
    setMessage(e.target.value);
  };

  const submitApi = (e: any) => {
    setKey(e.target.value);
  };
  useEffect(() => {
    apiTest();
  }, []);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.chatBox}>
          <div className={styles.chatMsgBox}>
            <div>{question}</div>
            <div className={styles.answerBox}>{answer}</div>
          </div>
          <div>
            <input
              onChange={(e) => submitApi(e)}
              type="text"
              placeholder="typing api key"
            />
          </div>
          <div className={styles.chatBtnBox}>
            <input
              type="text"
              placeholder="input chat"
              className={styles.chatInputBox}
              onChange={(e) => onChatMessage(e)}
            />
            <button onClick={chatApi} className={styles.chatBtn}>
              expressHandle
            </button>
          </div>
        </div>
      </main>
    </>
  );
}
